{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["_loopInterval","d","Date","keyOfCmaj","I","ii","iii","IV","V","vi","vii","keyOfAharmonicMinor","i","III","iv","VI","keyOfAnaturalMinor","v","VII","notes2values","C♭","C","C#","D♭","D","D#","E♭","E","F♭","F","F#","G♭","G","G#","A♭","A","A#","B♭","B","chordList","Cmaj","Caug","Dmin","Dmaj","Emin","Emaj","Fmaj","F#dim","F#maj","Gmaj","Gmin","Gdim","G#maj","G#dim","Amin","Bdim","Bmin","loopIndex","majorDirection","natMinorDirection","minorDirection","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","generateChordProgression","bind","assertThisInitialized","newCotd","playSound","toggleRandom","loop","state","isRandom","cotd","isPlaying","progLen","undefined","refs","progressionLength","value","Number","setState","console","log","clearInterval","playNext","theChords","chords","split","length","className","map","chord","btnName","setInterval","chordArray","midi","playChordNow","startChord","nextChord","keyChords","direction","majOrMin","progLength","arguments","prog","randomMinor","aminor","cmajor","randomKey","checked","Math","floor","random","anatural","push","rand","theMinor","_type","key","roman","join","_this2","react_default","a","createElement","midisoundsreact_default","ref","appElementName","instruments","cindex","getTime","onClick","chordArr","disabled","type","id","name","defaultChecked","href","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.af71b0f3.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport MIDISounds from 'midi-sounds-react';\nimport './App.css';\n\nvar d = new Date();\nconst keyOfCmaj = {\"I\":\"Cmaj\",\"ii\":\"Dmin\",\"iii\":\"Emin\",\"IV\":\"Fmaj\",\"V\":\"Gmaj\",\"vi\":\"Amin\",\"vii\":\"Bmin\"}\nconst keyOfAharmonicMinor = {\"i\":\"Amin\",\"ii\":\"Bmin\",\"III\":\"Caug\",\"iv\":\"Dmin\",\"V\":\"Emaj\",\"VI\":\"Fmaj\",\"vii\":\"Gdim\"}\nconst keyOfAnaturalMinor = {\"i\":\"Amin\",\"ii\":\"Bdim\",\"III\":\"Cmaj\",\"iv\":\"Dmin\",\"v\":\"Emin\",\"VI\":\"Fmaj\",\"VII\":\"Gmaj\"}\n\nconst notes2values = {\"C♭\":59,\"C\":48,\"C#\":49,\"D♭\":49,\"D\":50,\"D#\":51,\"E♭\":51,\"E\":52,\"F♭\":52,\"F\":53,\"F#\":54,\"G♭\":54,\"G\":55,\"G#\":56,\"A♭\":56,\"A\":57,\"A#\":58,\"B♭\":58,\"B\":59}\n\nconst chordList = {\n  \"Cmaj\":[\"C\",\"E\",\"G\"],\n  \"Caug\":[\"C\",\"E\",\"G#\"],\n  \"Dmin\":[\"D\",\"F\",\"A\"],\n  \"Dmaj\":[\"D\",\"F#\",\"A\"],\n  \"Emin\":[\"E\",\"G\",\"B\"],\n  \"Emaj\":[\"E\",\"G#\",\"B\"],\n  \"Fmaj\":[\"F\",\"A\",\"C\"],\n  \"F#dim\":[\"F#\",\"A\",\"C\"],\n  \"F#maj\":[\"F#\",\"A#\",\"C#\"],\n  \"Gmaj\":[\"G\",\"B\",\"D\"],\n  \"Gmin\":[\"G\",\"A#\",\"D\"],\n  \"Gdim\":[\"G\",\"A#\",\"C#\"],\n  \"G#maj\":[\"G#\",\"C\",\"D\"],\n  \"G#dim\":[\"G#\",\"B\",\"D\"],\n  \"Amin\":[\"A\",\"C\",\"E\"],\n  \"Bdim\":[\"B\",\"D\",\"F\"],\n  \"Bmin\":[\"D\",\"F#\",\"B\"]\n}\n\nvar loopIndex = 0;\nvar _loopInterval;\n/*\nconst majorDirection =\n  {\n   \"I\":[\"ii\",\"iii\",\"IV\",\"V\",\"vi\",\"vii\"],\n   \"ii\":[\"vii\",\"V\"],\n   \"iii\":[\"vi\",\"IV\"],\n   \"IV\":[\"I\",\"ii\",\"V\"],\n   \"V\":[\"I\",\"vi\"],\n   \"vi\":[\"IV\",\"ii\"],\n   \"vii\":[\"I\"]\n }\n */\n\nconst majorDirection =\n  {\n  \"I\":[\"ii\",\"iii\",\"IV\",\"V\",\"vi\"],\n  \"ii\":[\"V\",\"I\"],\n  \"iii\":[\"IV\",\"vi\",\"I\"],\n  \"IV\":[\"ii\",\"V\",\"I\"],\n  \"V\":[\"I\",\"vi\"],\n  \"vi\":[\"ii\",\"iii\",\"IV\",\"V\",\"I\"],\n }\n\n const natMinorDirection =\n {\n  \"i\":[\"ii\",\"III\",\"iv\",\"v\",\"VI\",\"VII\"],\n  \"ii\":[\"v\",\"VII\",\"i\"],\n  \"III\":[\"iv\",\"VI\",\"VII\",\"i\"],\n  \"iv\":[\"v\",\"VII\",\"i\"],\n  \"v\":[\"VI\",\"i\"],\n  \"VI\":[\"III\",\"iv\",\"v\",\"VII\",\"i\"],\n  \"VII\":[\"i\"],\n }\n\n const minorDirection =\n {\n  \"i\":[\"ii\",\"III\",\"iv\",\"V\",\"VI\",\"vii\"],\n  \"ii\":[\"V\",\"vii\",\"i\"],\n  \"III\":[\"iv\",\"VI\",\"vii\",\"i\"],\n  \"iv\":[\"V\",\"vii\",\"i\"],\n  \"V\":[\"VI\",\"i\"],\n  \"VI\":[\"III\",\"iv\",\"V\",\"vii\",\"i\"],\n  \"vii\":[\"i\"],\n }\n\n\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n\n    this.generateChordProgression = this.generateChordProgression.bind(this)\n    this.newCotd = this.newCotd.bind(this)\n    this.playSound = this.playSound.bind(this)\n    this.toggleRandom = this.toggleRandom.bind(this)\n    this.loop = this.loop.bind(this)\n    this.state = {isRandom:false}\n    var cotd = this.generateChordProgression();\n    this.state = {isRandom:false, cotd:cotd, isPlaying:false}\n  }\n\n  newCotd(){\n    let progLen = 4;\n    if(this.refs.progressionLength.value !== (null||undefined)){\n      progLen = this.refs.progressionLength.value;\n    }\n    let newCotd = this.generateChordProgression(Number(progLen));\n    this.setState({cotd:newCotd})\n  }\n\n  loop(){\n    if(this.state.isPlaying === false){\n        console.log(\"looping\")\n        this.setState({isPlaying:true})\n        loopIndex = 0;\n    }else{\n        console.log(\"stopping\")\n        loopIndex = 0;\n        clearInterval(_loopInterval)\n        this.setState({isPlaying:false})\n        return;\n    }\n\n    this.playNext = function(){\n      var theChords = this.state.cotd.chords.split(\" - \")\n\n      if(loopIndex === 0){\n        for(var i=0;i<theChords.length;i++){\n          this.refs[\"btn_\"+i].className='chordbtn'\n        }\n      }\n\n      this.playSound(chordList[theChords[loopIndex]].map(chord=>notes2values[chord]))\n      var btnName = \"btn_\"+loopIndex;\n      this.refs[btnName].className='chordbtn selected'\n      loopIndex++;\n\n      if(loopIndex+1>theChords.length){\n        loopIndex = 0;\n\n      }\n\n    }\n\n    _loopInterval = setInterval(this.playNext.bind(this),1500)\n\n\n  }\n\n  toggleRandom(){\n    this.setState({isRandom:!this.state.isRandom})\n    console.log('state is now',this.state)\n  }\n\n  playSound(chordArray){\n    if(this.refs.midi){\n      this.refs.midi.playChordNow(3,chordArray,1)\n    }\n  }\n\n  generateChordProgression(progLength=4){\n    let prog = [];\n    let startChord, nextChord, keyChords, direction, majOrMin;\n    let randomMinor = false;\n\n    if(this.refs.aminor && this.refs.cmajor && this.refs.randomKey){\n\n      if (this.refs.aminor.checked === true){\n        majOrMin = 1;\n      }\n\n      if (this.refs.cmajor.checked === true){\n        majOrMin = 0;\n      }\n\n      if(this.refs.randomKey.checked === true){\n        majOrMin = Math.floor(Math.random()*2);\n        randomMinor = true;\n      }\n    }else{\n      majOrMin = Math.floor(Math.random()*2);\n      randomMinor = true;\n    }\n\n\n      if(majOrMin === 0){\n        //major\n        startChord=\"I\"\n        keyChords = keyOfCmaj;\n        direction = majorDirection\n      }else{\n        //minor\n        startChord=\"i\"\n        keyChords = keyOfAharmonicMinor;\n        direction = minorDirection\n        if(this.refs.anatural !== undefined && this.refs.anatural.checked === true){\n          keyChords = keyOfAnaturalMinor;\n          direction = natMinorDirection;\n        }\n      }\n\n      if(randomMinor === true && startChord===\"i\"){\n        let rand=Math.floor(Math.floor(Math.random()*2))\n        if(rand===0){\n          keyChords = keyOfAnaturalMinor\n          direction = natMinorDirection\n        }else{\n          keyChords = keyOfAharmonicMinor\n          direction = minorDirection;\n        }\n      }\n\n      //use this loop to produce random length progressions that attempt follow the rules and resolve back to i/I\n    if(this.state.isRandom === true){\n      while(nextChord !== startChord){\n          if(prog.length===0){nextChord=startChord}\n          prog.push(nextChord)\n          let rand = Math.floor(Math.random()*direction[nextChord].length)\n          nextChord = direction[nextChord][rand]\n      }\n      prog.push(startChord)\n  }else{\n\n      //use this loop to produce progressions of a spefic length that don't necessarily resolve back to i/I\n      while(prog.length !== progLength){\n          if(prog.length===0){nextChord=startChord}\n          prog.push(nextChord)\n          let rand = Math.floor(Math.random()*direction[nextChord].length)\n          nextChord = direction[nextChord][rand]\n      }\n    }\n\n    let chords = prog.map(chord=>keyChords[chord]);\n\n    let theMinor;\n\n    if(keyChords === keyOfAnaturalMinor){\n      theMinor = 'A natural minor';\n    }\n\n    if(keyChords === keyOfAharmonicMinor){\n      theMinor = 'A harmonic minor'\n    }\n\n\n    return {\"_type\":(majOrMin===0)?\"major\":\"minor\",\"key\":(majOrMin===0)?\"C major\":theMinor, length:prog.length,\"roman\":prog.join(\" - \"),\"chords\":chords.join(\" - \")}\n\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <MIDISounds className=\"hidden\" ref='midi' appElementName=\"root\" instruments={[3]} />\n        <header className=\"App-header\">\n        <div className='headerbg'>\n          <h4>Simple Chord Progression Generator</h4>\n          </div>\n          <p>\n          {this.state.cotd.length} chords in the key of {this.state.cotd.key}:<br/>\n          <span className=\"chords\">{this.state.cotd.roman}</span><br/><br/>\n          <span>{this.state.cotd.chords.split(\" - \").map((chord,cindex)=>{\n            return <span key={d.getTime()*Math.random()*50}><button className='chordbtn' ref={'btn_'+cindex} key={d.getTime()*Math.random()*50} onClick={() => this.playSound(chordList[chord].map(chordArr=>notes2values[chordArr]))}>{chord} &#9658;<br/> <span className='chordLetters'>({chordList[chord].join(\" - \")})</span><br/></button> </span>;\n          })}</span>\n          </p>\n          <p>\n          <button className='newbtn'\n            onClick={this.newCotd}\n          >\n            Generate New Progression\n            </button>\n            &nbsp;\n            <button className={(this.state.isPlaying===false)?'newbtn':'newbtn selected'} onClick={this.loop}>\n            {(this.state.isPlaying === false)?\"Play on Loop\":\"Stop Looping\"}\n            </button>\n</p>\n            <br className='hh'/>\n          <div className=\"appBody\">\n          <h4 className='subhead'>Options</h4>\n            <p className=\"options\">\n              <span className={(this.state.isRandom)?'greystrike':'orange'}><strong>length</strong></span> <select ref='progressionLength' disabled={this.state.isRandom}>\n                <option value=\"4\">4</option>\n                <option value=\"5\">5</option>\n                <option value=\"6\">6</option>\n                <option value=\"7\">7</option>\n                <option value=\"8\">8</option>\n                <option value=\"9\">9</option>\n                <option value=\"10\">10</option>\n                <option value=\"11\">11</option>\n                <option value=\"12\">12</option>\n              </select> &nbsp; <span className='white'><strong><u>OR</u></strong></span> &nbsp;  <strong>random length<sup>*</sup></strong> <input type=\"checkbox\" onClick={this.toggleRandom} ref='isRandom'/></p>\n                <p className='options'><strong><input type='radio' id='major' ref='cmajor' name='mkey'/>C major <input type='radio' id=\"minor\" ref='aminor' name='mkey'/>A harmonic minor <input type='radio' id='natural' ref='anatural' name='mkey'/>A natural minor <input type='radio' ref='randomKey' id='randomKey' name='mkey' defaultChecked/>random</strong></p>\n                <p className='tiny'><strong>*</strong> the random length option attempts to resolve to the i/I chord.</p>\n\n            <br/>\n            </div>\n            <h5>&copy; 2019 Bill Pickard &ndash; <a className='bioLink' href='../../'>www.billrpickard.com</a> &ndash; All Rights Reserved.<br/>Version 1.0</h5>\n\n        </header>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}